# L2:
plot(sqrt(grid_epsilon), sqrt(bayes_acts_L2_v1), type = "l", col = "red", lty = "dashed",
xlab = expression(epsilon), ylab = "Bayes act", ylim = sqrt(c(0.01, 0.3)), axes = FALSE)
abline(0:1, col = "darkgrey")
mtext("(b) L2", side = 3, line = 0.5)
axis(1, at = sqrt(x_labels), labels = x_labels)
axis(2, at = sqrt(x_labels), labels = x_labels)
lines(sqrt(grid_epsilon), sqrt(bayes_acts_L2_v2), col = "blue", lty = "twodash")
lines(sqrt(grid_epsilon), sqrt(bayes_acts_L2_v1), type = "l", col = "red", lty = "dashed")
abline(h = sqrt(mu), col = "darkgrey")
abline(v = sqrt(mu), col = "darkgrey")
text_in_box(0.25, sqrt(mu), expression(mu), col = "darkgrey")
text_in_box(sqrt(mu), 0.25, expression(mu), col = "darkgrey")
text_in_box(sqrt(0.28), sqrt(0.28), expression(epsilon), col = "darkgrey")
box()
# Legend:
par(mar = c(0, 0, 0, 0))
plot(NULL, xlim = 0:1, ylim = 0:1, xlab = "", ylab = "", axes = FALSE)
legend("center", legend = c(expression({TADDA1[epsilon]}(hat(y), y)),
expression({TADDA2[epsilon]}(hat(y), y))),
bty = "n", cex = 1, lty = c("dashed", "twodash"),
col = c("red", "blue"),
y.intersp = 1.5)
dev.off()
#################
# SUPPLEMENTARY FIGURE S6: Illustration of TADDA2 score:
# set epsilon
epsilon <- 0.048
### L1, version TADDA2
pdf("Figures/illustration_TADDA2.pdf", width = 8, height = 4)
# structure plot area:
layout(matrix(c(1, 2, 5,
3, 4, 5), byrow = TRUE, ncol = 3), widths = c(2, 2, 1))
par(mar = c(4.2, 4, 3, 0.5), las = 1)
xlim <- c(-0.15, 0.15)
ylim <- c(0, 0.4)
ylab <- "score" # expression({TADDA^(1)}(hat(y), y))
shift <- 0.01
# with fixed y, as a function of y_hat
# y in [-epsilon, epsilon]
grid_y <- seq(from = -0.15, to = 0.25, by = 0.005)
y_true <- 0.03
grid_TADDA_a <- TADDA_L1(grid_y, y_true)
grid_TADDA_v1_a <- TADDA_L1_v1(grid_y, y_true, epsilon = epsilon)
grid_TADDA_v2_a <- TADDA_L1_v2(grid_y, y_true, epsilon = epsilon)
grid_ae_a <- abs(grid_y - y_true)
plot(grid_y, grid_TADDA_v1_a, xlab = expression(hat(y)),
ylab = ylab, ylim = ylim, xlim = xlim, col = "white")
mtext(expression(
TADDA~with~y%in%paste("[", -epsilon, ",", epsilon, "]"~", varying"~hat(y))
), 3, cex = 0.9, line = 0.3)
rect(-epsilon, -1, epsilon, 11, col = "grey97", border = NA)
abline(h = 0:10, col = "grey95")
abline(v = -6:8, col = "grey95")
box()
# lines(grid_y, grid_TADDA_a + shift, col = "red", lty = 5)
lines(grid_y, grid_TADDA_v2_a, col = "red", lty = 4)
lines(grid_y, grid_ae_a - shift, col = "black", lty = 3)
# lines(grid_y, grid_TADDA_v2_a + shift, col = "blue", lty = "twodash")
abline(v = 0, col = "darkgrey", lty = "dotted")
abline(v = y_true, lty = "solid", col = "darkgrey")
abline(v = c(epsilon, -epsilon), lty = "dotted", col = "darkgrey")
text_in_box(0, 0.9*ylim[2], expression(0), col = "darkgrey")
text_in_box(epsilon, 0.9*ylim[2], expression(epsilon), col = "darkgrey")
text_in_box(-epsilon,  0.9*ylim[2], expression(-epsilon), col = "darkgrey")
text_in_box(y_true,  0.5*ylim[2], expression(y), col = "darkgrey")
# y > epsilon
y_true <- 0.1
grid_TADDA_b <- TADDA_L1(grid_y, y_true)
grid_TADDA_v1_b <- TADDA_L1_v1(grid_y, y_true, epsilon = epsilon)
grid_TADDA_v2_b <- TADDA_L1_v2(grid_y, y_true, epsilon = epsilon)
grid_ae_b <- abs(grid_y - y_true)
plot(grid_y, grid_TADDA_v1_b + shift, type = "l", xlab = expression(hat(y)),
ylab = "", ylim = ylim, xlim = xlim, col = "white")
mtext(expression(TADDA~with~y > epsilon~", varying"~hat(y)), 3, cex = 0.9, line = 0.3)
rect(-epsilon, -1, epsilon, 11, col = "grey97", border = NA)
abline(h = 0:10, col = "grey95")
abline(v = -6:8, col = "grey95")
box()
# lines(grid_y, grid_TADDA_b + shift, col = "red", lty = 5)
lines(grid_y, grid_TADDA_v2_b, col = "red", lty = 4)
lines(grid_y, grid_ae_b - shift, col = "black", lty = 3)
# lines(grid_y, grid_TADDA_v2_b + shift, col = "blue", lty = "twodash")
abline(v = 0, col = "darkgrey", lty = "dotted")
abline(v = y_true, lty = "solid", col = "darkgrey")
abline(v = c(epsilon, -epsilon), lty = "dotted", col = "darkgrey")
text_in_box(0, 0.9*ylim[2], expression(0), col = "darkgrey")
text_in_box(epsilon, 0.9*ylim[2], expression(epsilon), col = "darkgrey")
text_in_box(-epsilon,  0.9*ylim[2], expression(-epsilon), col = "darkgrey")
text_in_box(y_true,  0.5*ylim[2], expression(y), col = "darkgrey")
# with fixed y_hat, as a function of y_hat
# y_hat in [-epsilon, epsilon]
y_hat <- 0.03
grid_TADDA_c <- TADDA_L1(y_hat, grid_y)
grid_TADDA_v1_c <- TADDA_L1_v1(y_hat, grid_y, epsilon = epsilon)
grid_TADDA_v2_c <- TADDA_L1_v2(y_hat, grid_y, epsilon = epsilon)
grid_ae_c <- abs(y_hat - grid_y)
plot(grid_y, grid_TADDA_v1_c + shift, type = "l", xlab = expression(y),
ylab = ylab, ylim = ylim, xlim = xlim, col = "white")
mtext(
expression(TADDA~with~hat(y)%in%paste("[", -epsilon, ",", epsilon, "]"~", varying"~y)),
3, cex = 0.9, line = 0.3)
rect(-epsilon, -1, epsilon, 11, col = "grey97", border = NA)
abline(h = 0:10, col = "grey95")
abline(v = -6:8, col = "grey95")
box()
# lines(grid_y, grid_TADDA_c + shift, col = "red", lty = 5)
lines(grid_y, grid_TADDA_v2_c, col = "red", lty = 4)
lines(grid_y, grid_ae_c - shift, col = "black", lty = 3)
# lines(grid_y, grid_TADDA_v2_c - shift, col = "blue", lty = "twodash")
abline(v = 0, col = "darkgrey", lty = "dotted")
abline(v = y_hat, lty = "solid", col = "darkgrey")
abline(v = c(epsilon, -epsilon), lty = "dotted", col = "darkgrey")
text_in_box(0, 0.9*ylim[2], expression(0), col = "darkgrey")
text_in_box(epsilon, 0.9*ylim[2], expression(epsilon), col = "darkgrey")
text_in_box(-epsilon,  0.9*ylim[2], expression(-epsilon), col = "darkgrey")
text_in_box(y_hat,  0.5*ylim[2], expression(hat(y)), col = "darkgrey")
# y > epsilon
y_hat <- 0.1
grid_TADDA_d <- TADDA_L1(y_hat, grid_y)
grid_TADDA_v1_d <- TADDA_L1_v1(y_hat, grid_y, epsilon = epsilon)
grid_TADDA_v2_d <- TADDA_L1_v2(y_hat, grid_y, epsilon = epsilon)
grid_ae_d <- abs(y_hat - grid_y)
plot(grid_y, grid_TADDA_v1_d + shift, type = "l", xlab = expression(y),
ylab = "", ylim = ylim, xlim = xlim, col = "white")
mtext(expression(TADDA~with~hat(y) > epsilon~", varying"~y), 3, cex = 0.9, line = 0.3)
rect(-epsilon, -1, epsilon, 11, col = "grey97", border = NA)
abline(h = 0:10, col = "grey95")
abline(v = -6:8, col = "grey95")
box()
# lines(grid_y, grid_TADDA_d + shift, col = "red", lty = 5)
lines(grid_y, grid_TADDA_v2_d, col = "red", lty = 4)
lines(grid_y, grid_ae_d - shift, col = "black", lty = 3)
abline(v = 0, col = "darkgrey", lty = "dotted")
abline(v = y_true, lty = "solid", col = "darkgrey")
abline(v = c(epsilon, -epsilon), lty = "dotted", col = "darkgrey")
text_in_box(0, 0.9*ylim[2], expression(0), col = "darkgrey")
text_in_box(epsilon, 0.9*ylim[2], expression(epsilon), col = "darkgrey")
text_in_box(-epsilon,  0.9*ylim[2], expression(-epsilon), col = "darkgrey")
text_in_box(y_true,  0.5*ylim[2], expression(hat(y)), col = "darkgrey")
# legend in separate panel:
par(mar = c(0, 0, 0, 0))
plot(NULL, xlim = 0:1, ylim = 0:1, xlab = "", ylab = "", axes = FALSE)
legend("center", legend = c(# expression({TADDA[0]}(hat(y), y)),
expression({TADDA2[epsilon]}(hat(y), y)),
expression(AE(hat(y), y))),
bty = "n", cex = 1.2, lty = 5:3, col = c("red", "black"),
y.intersp = 1.5)
dev.off()
### additional figure ultimately not used: illustration of L2 scores
pdf("Figures/curves_scores_L2.pdf", width = 8, height = 4)
layout(matrix(c(1, 2, 5,
3, 4, 5), byrow = TRUE, ncol = 3), widths = c(2, 2, 1))
par(mar = c(4.2, 4, 3, 0.5), las = 1)
xlim <- c(-0.1, 0.2)
ylim <- c(0, 0.1)
ylab <- "score" # expression({TADDA^(2)}(hat(y), y))
shift <- 0
# with fixed y, as a function of y_hat
# y in [-epsilon, epsilon]
y_true <- 0.03
grid_TADDA_L2_a <- TADDA_L2(grid_y, y_true)
grid_TADDA_L2_v1_a <- TADDA_L2_v1(grid_y, y_true, epsilon = epsilon)
grid_TADDA_L2_v2_a <- TADDA_L2_v2(grid_y, y_true, epsilon = epsilon)
plot(grid_y, grid_TADDA_L2_a, type = "l", xlab = expression(hat(y)),
ylab = ylab, ylim = ylim, xlim = xlim)
mtext(expression(
TADDA^(2)~with~y%in%paste("[", -epsilon, ",", epsilon, "]"~", varying"~hat(y))
), 3, cex = 0.9, line = 0.3)
rect(-epsilon, -1, epsilon, 11, col = "grey97", border = NA)
abline(h = 0:10, col = "grey95")
abline(v = -6:8, col = "grey95")
box()
lines(grid_y, grid_TADDA_L2_a)
lines(grid_y, grid_TADDA_L2_v1_a - shift, col = "red", lty = "dashed")
lines(grid_y, grid_TADDA_L2_v2_a + shift, col = "blue", lty = "twodash")
abline(v = 0, col = "darkgrey", lty = "dotted")
abline(v = y_true, lty = "solid", col = "darkgrey")
abline(v = c(epsilon, -epsilon), lty = "dotted", col = "darkgrey")
text_in_box(0, 0.9*ylim[2], expression(0), col = "darkgrey")
text_in_box(epsilon, 0.9*ylim[2], expression(epsilon), col = "darkgrey")
text_in_box(-epsilon,  0.9*ylim[2], expression(-epsilon), col = "darkgrey")
text_in_box(y_true,  0.5*ylim[2], expression(y), col = "darkgrey")
# y > epsilon
y_true <- 0.1
grid_TADDA_L2_b <- TADDA_L2(grid_y, y_true)
grid_TADDA_L2_v1_b <- TADDA_L2_v1(grid_y, y_true, epsilon = epsilon)
grid_TADDA_L2_v2_b <- TADDA_L2_v2(grid_y, y_true, epsilon = epsilon)
plot(grid_y, grid_TADDA_L2_b, type = "l", xlab = expression(hat(y)),
ylab = "", ylim = ylim, xlim = xlim)
mtext(expression(TADDA^(2)~with~y > epsilon~", varying"~hat(y)), 3, cex = 0.9, line = 0.3)
rect(-epsilon, -1, epsilon, 11, col = "grey97", border = NA)
abline(h = 0:10, col = "grey95")
abline(v = -6:8, col = "grey95")
box()
lines(grid_y, grid_TADDA_L2_b)
lines(grid_y, grid_TADDA_L2_v1_b - shift, col = "red", lty = "dashed")
lines(grid_y, grid_TADDA_L2_v2_b + shift, col = "blue", lty = "twodash")
abline(v = 0, col = "darkgrey", lty = "dotted")
abline(v = y_true, lty = "solid", col = "darkgrey")
abline(v = c(epsilon, -epsilon), lty = "dotted", col = "darkgrey")
text_in_box(0, 0.9*ylim[2], expression(0), col = "darkgrey")
text_in_box(epsilon, 0.9*ylim[2], expression(epsilon), col = "darkgrey")
text_in_box(-epsilon,  0.9*ylim[2], expression(-epsilon), col = "darkgrey")
text_in_box(y_true,  0.5*ylim[2], expression(y), col = "darkgrey")
# with fixed y_hat, as a function of y_hat
# y_hat in [-epsilon, epsilon]
y_hat <- 0.03
grid_TADDA_L2_c <- TADDA_L2(y_hat, grid_y)
grid_TADDA_L2_v1_c <- TADDA_L2_v1(y_hat, grid_y, epsilon = epsilon)
grid_TADDA_L2_v2_c <- TADDA_L2_v2(y_hat, grid_y, epsilon = epsilon)
plot(grid_y, grid_TADDA_L2_c, type = "l", xlab = expression(y),
ylab = ylab, ylim = ylim, xlim = xlim)
mtext(
expression(TADDA^(2)~with~hat(y)%in%paste("[", -epsilon, ",", epsilon, "]"~", varying"~y)),
3, cex = 0.9, line = 0.3)
rect(-epsilon, -1, epsilon, 11, col = "grey97", border = NA)
abline(h = 0:10, col = "grey95")
abline(v = -6:8, col = "grey95")
box()
lines(grid_y, grid_TADDA_L2_c)
lines(grid_y, grid_TADDA_L2_v1_c - shift, col = "red", lty = "dashed")
lines(grid_y, grid_TADDA_L2_v2_c + shift, col = "blue", lty = "twodash")
abline(v = 0, col = "darkgrey", lty = "dotted")
abline(v = y_hat, lty = "solid", col = "darkgrey")
abline(v = c(epsilon, -epsilon), lty = "dotted", col = "darkgrey")
text_in_box(0, 0.9*ylim[2], expression(0), col = "darkgrey")
text_in_box(epsilon, 0.9*ylim[2], expression(epsilon), col = "darkgrey")
text_in_box(-epsilon,  0.9*ylim[2], expression(-epsilon), col = "darkgrey")
text_in_box(y_hat,  0.5*ylim[2], expression(hat(y)), col = "darkgrey")
# y > epsilon
y_hat <- 0.1
grid_TADDA_L2_d <- TADDA_L2(y_hat, grid_y)
grid_TADDA_L2_v1_d <- TADDA_L2_v1(y_hat, grid_y, epsilon = epsilon)
grid_TADDA_L2_v2_d <- TADDA_L2_v2(y_hat, grid_y, epsilon = epsilon)
plot(grid_y, grid_TADDA_L2_d, type = "l", xlab = expression(y),
ylab = "", ylim = ylim, xlim = xlim)
mtext(expression(TADDA^(2)~with~hat(y) > epsilon~", varying"~y), 3, cex = 0.9, line = 0.3)
rect(-epsilon, -1, epsilon, 11, col = "grey97", border = NA)
abline(h = 0:10, col = "grey95")
abline(v = -6:8, col = "grey95")
box()
lines(grid_y, grid_TADDA_L2_d)
lines(grid_y, grid_TADDA_L2_v1_d - shift, col = "red", lty = "dashed")
lines(grid_y, grid_TADDA_L2_v2_d + shift, col = "blue", lty = "twodash")
abline(v = 0, col = "darkgrey", lty = "dotted")
abline(v = y_true, lty = "solid", col = "darkgrey")
abline(v = c(epsilon, -epsilon), lty = "dotted", col = "darkgrey")
text_in_box(0, 0.9*ylim[2], expression(0), col = "darkgrey")
text_in_box(epsilon, 0.9*ylim[2], expression(epsilon), col = "darkgrey")
text_in_box(-epsilon,  0.9*ylim[2], expression(-epsilon), col = "darkgrey")
text_in_box(y_true,  0.5*ylim[2], expression(hat(y)), col = "darkgrey")
par(mar = c(0, 0, 0, 0))
plot(NULL, xlim = 0:1, ylim = 0:1, xlab = "", ylab = "", axes = FALSE)
legend("center", legend = c(expression({TADDA[0]^(2)}(hat(y), y)),
expression({TADDA1[epsilon]^(2)}(hat(y), y)),
expression({TADDA2[epsilon]^"(2)"}(hat(y), y))),
bty = "n", cex = 1.2, lty = c("solid", "dashed", "twodash"), col = c("black", "red", "blue"),
y.intersp = 1.5)
dev.off()
### Illustrations for proofs of OPF formulations
# This script generates SUPPLEMENTARY FIGURES S4 and S5
# Johannes Bracher
# johannes.bracher@kit.edu
library(sn)
current_path <- rstudioapi::getActiveDocumentContext()$path # get path of this file
setwd(dirname(current_path))
source("functions.R")
#################################################
# SUPPLEMENTARY FIGURE S4: TADDA_epsilon, m > epsilon
# epsilon:
epsilon <- 0.5 # using larger epsilon for illustration
# parameters of skew normal:
xi <- -1.7
omega <- 5
alpha <- 8
# generate samples:
set.seed(123)
samples_y <- rsn(100000, xi = xi, omega = omega, alpha = alpha)
# prepare plotting density:
grid_y <- seq(from = -5, to = 10, by = 0.01)
F <- psn(x = grid_y, xi = xi, omega = omega, alpha = alpha)
# compute mean and median:
(mu <- mean(samples_y))
(med <- median(samples_y))
# evaluate density at epsilon and minus epsilon
F_minus_epsilon <- mean(samples_y < -epsilon)
F_epsilon <- mean(samples_y < epsilon)
# inflate with epsilons:
n_epsilon <- sum(samples_y < -epsilon)
samples_y_epsilon <- c(samples_y, rep(epsilon, n_epsilon))
# prepare plotting density of epsilon-inflated distribution:
grid_p <- 1:100/100
quantiles_y_epsilon <- quantile(samples_y_epsilon, p = grid_p)
# obtain median and mean of inflated distribution:
(med_modified <- max((quantile(samples_y, 0.5*(1 - sign(med)*F_minus_epsilon))), 0))
(mu_modified <- mean(samples_y)/(1 + pi))
# Plot:
pdf("Figures/F_vs_G_epsilon.pdf", width = 6, height = 3.5)
par(las = 1, mar = c(4.2, 4.2, 0.5, 0.5))
plot(grid_y, F, type = "l", col = "black", xlab = "y", ylab = "cumulative density", ylim = 0:1)
# highlight tolerance region:
rect(-epsilon, 0, epsilon, 1.2, col = "grey97", border = NA)
# adding vertical / horizontal lines and labelling:
abline(v = -epsilon, col = "lightgrey")
abline(v = epsilon, col = "lightgrey")
abline(h = 0.5, col = "lightgrey", lty  ="dashed")
abline(h = F_epsilon/(1 + F_minus_epsilon), col = "lightgrey")
abline(v = med, col = "black", lty = "dashed")
abline(v = med_modified, col = "red", lty  ="dashed")
# adding CDFs:
lines(grid_y, F)
lines(quantiles_y_epsilon, grid_p, col = "red")
# some more labelling:
text_in_box(-3, 0.5, "0.5", col = "lightgrey")
text_in_box(epsilon, 0.7, expression(epsilon), col = "lightgrey")
text_in_box(-epsilon, 0.7, expression(-epsilon), col = "lightgrey")
text_in_box(med_modified, 0.95, "OPF: median of Z", col = "red")
text_in_box(med + 1.25, 0.05, "median of Y", col = "black")
text_in_box(6, (F_epsilon + F_minus_epsilon)/(1 + F_minus_epsilon),
expression((F(epsilon) + pi["-"])/(1 + pi["-"])), col = "lightgrey", cex = 0.8)
text_in_box(6, F_epsilon/(1 + F_minus_epsilon),
expression(F(epsilon)/(1 + pi["-"])), col = "lightgrey", cex = 0.8)
legend("topleft", legend = c("CDF of Y", "CDF of Z"), col = c("black", "red"), lty = 1, bty = "n")
box()
dev.off()
##########################################
# SUPPLEMENTARY FIGURE S5: TADDA_epsilon, m > epsilon
# epsilon:
epsilon <- 0.5 # larger epsilon for illustration:
# parameters of skew normal:
xi <- 1.7
omega <- 5
alpha <- -8
# generate samples:
set.seed(123)
samples_y <- rsn(100000, xi = xi, omega = omega, alpha = alpha)
# prepare plotting density:
grid_y <- seq(from = -10, to = 5, by = 0.01)
F <- psn(x = grid_y, xi = xi, omega = omega, alpha = alpha)
# compute mean and median:
(mu <- mean(samples_y))
(med <- median(samples_y))
# evaluate density at epsilon and minus epsilon
F_minus_epsilon <-  mean(samples_y < -epsilon)
F_epsilon <-  mean(samples_y < epsilon)
# inflate with -epsilons:
n_minus_epsilon <- sum(samples_y > epsilon)
samples_y_minus_epsilon <- c(samples_y, rep(-epsilon, n_minus_epsilon))
# prepare plotting density of -epsilon-inflated distribution:
grid_p <- 1:100/100
quantiles_y_minus_epsilon <- quantile(samples_y_minus_epsilon, p = grid_p)
# obtain median and mean of inflated distribution:
(med_modified <- quantile(samples_y, 0.5*(2 - F_epsilon)))
(mu_modified <- mean(samples_y)/(1 + pi))
# Plot:
pdf("Figures/F_vs_G_minus_epsilon.pdf", width = 6, height = 3.5)
par(las = 1, mar = c(4.2, 4.2, 0.5, 0.5))
plot(grid_y, F, type = "l", col = "black", xlab = "y", ylab = "cumulative density", ylim = 0:1)
# highlight tolerance region:
rect(-epsilon, 0, epsilon, 1.2, col = "grey97", border = NA)
# various vertical and horizontal lines with labels:
abline(v = -epsilon, col = "lightgrey")
abline(v = epsilon, col = "lightgrey")
abline(h = 0.5, col = "lightgrey", lty = "dashed")
abline(h = F_minus_epsilon/(2 - F_epsilon), col = "lightgrey")
abline(h = (1 - F_epsilon + F_minus_epsilon)/(2 - F_epsilon), col = "lightgrey")
abline(v = med, col = "black", lty = "dashed")
abline(v = med_modified, col = "red", lty  ="dashed")
# add CDFs:
lines(quantiles_y_minus_epsilon, grid_p, col = "red")
lines(grid_y, F)
# some more labelling:
text_in_box(3, 0.5, "0.5", col = "lightgrey")
text_in_box(epsilon, 0.3, expression(epsilon), col = "lightgrey")
text_in_box(-epsilon, 0.3, expression(-epsilon), col = "lightgrey")
text_in_box(-6, F_minus_epsilon/(2 - F_epsilon),
expression(F(-epsilon)/(1 + pi["+"])), col = "lightgrey", cex = 0.8)
text_in_box(-5.5, (1 - F_epsilon + F_minus_epsilon)/(2 - F_epsilon),
expression((F(-epsilon) + pi["+"])/(1 + pi["+"])), col = "lightgrey", cex = 0.8)
text_in_box(med_modified + 1.6, 0.15, "OPF: median of Z", col = "red")
text_in_box(med, 0.95, "median of Y", col = "black")
# legend:
legend("topleft", legend = c("CDF of Y", "CDF of Z"), col = c("black", "red"), lty = 1, bty = "n")
box()
dev.off()
### Illustrations for proofs of OPF formulations
# This script generates SUPPLEMENTARY FIGURES S4 and S5
# Johannes Bracher
# johannes.bracher@kit.edu
library(sn)
current_path <- rstudioapi::getActiveDocumentContext()$path # get path of this file
setwd(dirname(current_path))
source("functions.R")
#################################################
# SUPPLEMENTARY FIGURE S4: TADDA_epsilon, m > epsilon
# epsilon:
epsilon <- 0.5 # using larger epsilon for illustration
# parameters of skew normal:
xi <- -1.7
omega <- 5
alpha <- 8
# generate samples:
set.seed(123)
samples_y <- rsn(100000, xi = xi, omega = omega, alpha = alpha)
# prepare plotting density:
grid_y <- seq(from = -5, to = 10, by = 0.01)
F <- psn(x = grid_y, xi = xi, omega = omega, alpha = alpha)
# compute mean and median:
(mu <- mean(samples_y))
(med <- median(samples_y))
# evaluate density at epsilon and minus epsilon
F_minus_epsilon <- mean(samples_y < -epsilon)
F_epsilon <- mean(samples_y < epsilon)
# inflate with epsilons:
n_epsilon <- sum(samples_y < -epsilon)
samples_y_epsilon <- c(samples_y, rep(epsilon, n_epsilon))
# prepare plotting density of epsilon-inflated distribution:
grid_p <- 1:100/100
quantiles_y_epsilon <- quantile(samples_y_epsilon, p = grid_p)
# obtain median and mean of inflated distribution:
(med_modified <- max((quantile(samples_y, 0.5*(1 - sign(med)*F_minus_epsilon))), 0))
(mu_modified <- mean(samples_y)/(1 + pi))
# Plot:
pdf("Figures/F_vs_G_epsilon.pdf", width = 6, height = 3.5)
par(las = 1, mar = c(4.2, 4.2, 0.5, 0.5))
plot(grid_y, F, type = "l", col = "black", xlab = "y", ylab = "cumulative density", ylim = 0:1)
# highlight tolerance region:
rect(-epsilon, 0, epsilon, 1.2, col = "grey97", border = NA)
# adding vertical / horizontal lines and labelling:
abline(v = -epsilon, col = "lightgrey")
abline(v = epsilon, col = "lightgrey")
abline(h = 0.5, col = "lightgrey", lty  ="dashed")
abline(h = F_epsilon/(1 + F_minus_epsilon), col = "lightgrey")
abline(v = med, col = "black", lty = "dashed")
abline(v = med_modified, col = "red", lty  ="dashed")
# adding CDFs:
lines(grid_y, F)
lines(quantiles_y_epsilon, grid_p, col = "red")
# some more labelling:
text_in_box(-3, 0.5, "0.5", col = "lightgrey")
text_in_box(epsilon, 0.7, expression(epsilon), col = "lightgrey")
text_in_box(-epsilon, 0.7, expression(-epsilon), col = "lightgrey")
text_in_box(med_modified, 0.95, "OPF: median of Z", col = "red")
text_in_box(med + 1.25, 0.05, "median of Y", col = "black")
text_in_box(6, (F_epsilon + F_minus_epsilon)/(1 + F_minus_epsilon),
expression((F(epsilon) + pi["-"])/(1 + pi["-"])), col = "lightgrey", cex = 0.8)
text_in_box(6, F_epsilon/(1 + F_minus_epsilon),
expression(F(epsilon)/(1 + pi["-"])), col = "lightgrey", cex = 0.8)
legend("topleft", legend = c("CDF of Y", "CDF of Z"), col = c("black", "red"), lty = 1, bty = "n")
box()
dev.off()
##########################################
# SUPPLEMENTARY FIGURE S5: TADDA_epsilon, m > epsilon
# epsilon:
epsilon <- 0.5 # larger epsilon for illustration:
# parameters of skew normal:
xi <- 1.7
omega <- 5
alpha <- -8
# generate samples:
set.seed(123)
samples_y <- rsn(100000, xi = xi, omega = omega, alpha = alpha)
# prepare plotting density:
grid_y <- seq(from = -10, to = 5, by = 0.01)
F <- psn(x = grid_y, xi = xi, omega = omega, alpha = alpha)
# compute mean and median:
(mu <- mean(samples_y))
(med <- median(samples_y))
# evaluate density at epsilon and minus epsilon
F_minus_epsilon <-  mean(samples_y < -epsilon)
F_epsilon <-  mean(samples_y < epsilon)
# inflate with -epsilons:
n_minus_epsilon <- sum(samples_y > epsilon)
samples_y_minus_epsilon <- c(samples_y, rep(-epsilon, n_minus_epsilon))
# prepare plotting density of -epsilon-inflated distribution:
grid_p <- 1:100/100
quantiles_y_minus_epsilon <- quantile(samples_y_minus_epsilon, p = grid_p)
# obtain median and mean of inflated distribution:
(med_modified <- quantile(samples_y, 0.5*(2 - F_epsilon)))
(mu_modified <- mean(samples_y)/(1 + pi))
# Plot:
pdf("Figures/F_vs_G_minus_epsilon.pdf", width = 6, height = 3.5)
par(las = 1, mar = c(4.2, 4.2, 0.5, 0.5))
plot(grid_y, F, type = "l", col = "black", xlab = "y", ylab = "cumulative density", ylim = 0:1)
# highlight tolerance region:
rect(-epsilon, 0, epsilon, 1.2, col = "grey97", border = NA)
# various vertical and horizontal lines with labels:
abline(v = -epsilon, col = "lightgrey")
abline(v = epsilon, col = "lightgrey")
abline(h = 0.5, col = "lightgrey", lty = "dashed")
abline(h = F_minus_epsilon/(2 - F_epsilon), col = "lightgrey")
abline(h = (1 - F_epsilon + F_minus_epsilon)/(2 - F_epsilon), col = "lightgrey")
abline(v = med, col = "black", lty = "dashed")
abline(v = med_modified, col = "red", lty  ="dashed")
# add CDFs:
lines(quantiles_y_minus_epsilon, grid_p, col = "red")
lines(grid_y, F)
# some more labelling:
text_in_box(3, 0.5, "0.5", col = "lightgrey")
text_in_box(epsilon, 0.3, expression(epsilon), col = "lightgrey")
text_in_box(-epsilon, 0.3, expression(-epsilon), col = "lightgrey")
text_in_box(-6, F_minus_epsilon/(2 - F_epsilon),
expression(F(-epsilon)/(1 + pi["+"])), col = "lightgrey", cex = 0.8)
text_in_box(-5.5, (1 - F_epsilon + F_minus_epsilon)/(2 - F_epsilon),
expression((F(-epsilon) + pi["+"])/(1 + pi["+"])), col = "lightgrey", cex = 0.8)
text_in_box(med_modified + 1.6, 0.15, "OPF: median of Z", col = "red")
text_in_box(med, 0.95, "median of Y", col = "black")
# legend:
legend("topleft", legend = c("CDF of Y", "CDF of Z"), col = c("black", "red"), lty = 1, bty = "n")
box()
dev.off()
