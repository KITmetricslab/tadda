## 0: PREPARATIONS
## -----
library(rstudioapi)
library(dplyr)
# load functions from "Data_Prep_Functions"
source("data/DataPrep_Functions.R")
current_path = rstudioapi::getActiveDocumentContext()$path # get the path of your current open file
setwd(dirname(current_path))
setwd
dirname(current_path)
# set working directory
current_path = rstudioapi::getActiveDocumentContext()$path # get path of this file
setwd(dirname(current_path))
# get scoring functions
source("Illustration/functions.R")
source("bayes_acts_functions.R")
# read in data
# country_name_selected <- c("Mozambique", "Sudan", "Congo, DRC", "Mali", "Nigeria", "Somalia")
country_name_selected <- as.vector(read.csv2(paste("Data/country_name_selected.csv", sep = ""))$x)
mean_loss_table_uninformed <- mean_loss_table_informed <- list()
for (country in 1:length(country_name_selected)) {
data_fatalities <- read.csv2(paste("Data/fatalities_", country_name_selected[country], ".csv", sep = ""))
epsilon <- 0.048
window_length <- 24 # use data of the past 2 years for predictions
# theoretical bayes acts of last 24 observations
# 1 step-ahead forecast
BA_analytical_uninformed <- BA_analytical_informed <- data.frame(matrix(nrow = 0, ncol = 9))
colnames(BA_analytical_uninformed) <- colnames(BA_analytical_informed) <-
c("month_id",
"BA_AE", "BA_TADDA_L1", "BA_TADDA1_L1", "BA_TADDA2_L1",
"BA_SE", "BA_TADDA_L2", "BA_TADDA1_L2", "BA_TADDA2_L2")
# case 1: using the log change distribution of the window directly (uninformed)
for (i in 1:(length(data_fatalities$fatalities)-window_length-1)) {
window_begin <- i+1 # first order log-change is only available from t=2 onwards
window_end <- i+window_length
log_change_distribution <- data_fatalities$log_change_s1[window_begin:window_end]
BA_analytical_uninformed[i,] <- c(data_fatalities$month_id[window_end+1], # use bayes acts of past 23 log changes as prediction for observation t+1
compute_bayes_acts(log_change_distribution, epsilon))
}
# case 2: constructing the log change distribution based on current observation and past fatalities (informed)
for (i in 1:(length(data_fatalities$fatalities)-window_length-1)) {
window_begin <- i
window_end <- i+window_length
fatalities_window <- data_fatalities$fatalities[window_begin:(window_end-1)]
log_change_distribution <- log(fatalities_window+1) - log(data_fatalities$fatalities[window_end]+1) # use last observed value as reference point for log change distribution
BA_analytical_informed[i,] <- c(data_fatalities$month_id[window_end+1], # prediction for t+1
compute_bayes_acts(log_change_distribution, epsilon))
}
# compute mean losses
y_true <- unlist(data_fatalities %>% filter(month_id %in% BA_analytical_informed$month_id) %>% select(log_change_s1))
loss_tables_uninformed <- loss_tables(BA_analytical_uninformed[,-1], y_true, epsilon)
loss_tables_informed <- loss_tables(BA_analytical_informed[,-1], y_true, epsilon)
mean_loss_table_uninformed[[country]] <- mean_loss_table(BA_analytical_uninformed[,-1], y_true, epsilon); mean_loss_table_uninformed
mean_loss_table_informed[[country]] <- mean_loss_table(BA_analytical_informed[,-1], y_true, epsilon); mean_loss_table_informed
}
library(dplyr)
# set working directory
current_path = rstudioapi::getActiveDocumentContext()$path # get path of this file
setwd(dirname(current_path))
# get scoring functions
source("Illustration/functions.R")
source("bayes_acts_functions.R")
# read in data
# country_name_selected <- c("Mozambique", "Sudan", "Congo, DRC", "Mali", "Nigeria", "Somalia")
country_name_selected <- as.vector(read.csv2(paste("Data/country_name_selected.csv", sep = ""))$x)
mean_loss_table_uninformed <- mean_loss_table_informed <- list()
# read in data
country_name_selected <- c("Mozambique", "Sudan", "Congo, DRC", "Mali", "Nigeria", "Somalia")
mean_loss_table_uninformed <- mean_loss_table_informed <- list()
country <- 2
data_fatalities <- read.csv2(paste("Data/fatalities_", country_name_selected[country], ".csv", sep = ""))
epsilon <- 0.048
window_length <- 12 # use data of the past 2 years for predictions
# theoretical bayes acts of last 24 observations
# 1 step-ahead forecast
BA_analytical_uninformed <- BA_analytical_informed <- data.frame(matrix(nrow = 0, ncol = 9))
colnames(BA_analytical_uninformed) <- colnames(BA_analytical_informed) <-
c("month_id",
"BA_AE", "BA_TADDA_L1", "BA_TADDA1_L1", "BA_TADDA2_L1",
"BA_SE", "BA_TADDA_L2", "BA_TADDA1_L2", "BA_TADDA2_L2")
# case 1: using the log change distribution of the window directly (uninformed)
for (i in 1:(length(data_fatalities$fatalities)-window_length-1)) {
window_begin <- i+1 # first order log-change is only available from t=2 onwards
window_end <- i+window_length
log_change_distribution <- data_fatalities$log_change_s1[window_begin:window_end]
BA_analytical_uninformed[i,] <- c(data_fatalities$month_id[window_end+1], # use bayes acts of past 23 log changes as prediction for observation t+1
compute_bayes_acts(log_change_distribution, epsilon))
}
# case 2: constructing the log change distribution based on current observation and past fatalities (informed)
for (i in 1:(length(data_fatalities$fatalities)-window_length-1)) {
window_begin <- i
window_end <- i+window_length
fatalities_window <- data_fatalities$fatalities[window_begin:(window_end-1)]
log_change_distribution <- log(fatalities_window+1) - log(data_fatalities$fatalities[window_end]+1) # use last observed value as reference point for log change distribution
BA_analytical_informed[i,] <- c(data_fatalities$month_id[window_end+1], # prediction for t+1
compute_bayes_acts(log_change_distribution, epsilon))
}
# compute mean losses
y_true <- unlist(data_fatalities %>% filter(month_id %in% BA_analytical_informed$month_id) %>% select(log_change_s1))
loss_tables_uninformed <- loss_tables(BA_analytical_uninformed[,-1], y_true, epsilon)
loss_tables_informed <- loss_tables(BA_analytical_informed[,-1], y_true, epsilon)
mean_loss_table_uninformed[[country]] <- mean_loss_table(BA_analytical_uninformed[,-1], y_true, epsilon); mean_loss_table_uninformed
mean_loss_table_informed[[country]] <- mean_loss_table(BA_analytical_informed[,-1], y_true, epsilon); mean_loss_table_informed
data_fatalities <- read.csv2(paste("Data/fatalities_", country_name_selected[country], ".csv", sep = ""))
epsilon <- 0.048
window_length <- 36 # use data of the past 2 years for predictions
# theoretical bayes acts of last 24 observations
# 1 step-ahead forecast
BA_analytical_uninformed <- BA_analytical_informed <- data.frame(matrix(nrow = 0, ncol = 9))
colnames(BA_analytical_uninformed) <- colnames(BA_analytical_informed) <-
c("month_id",
"BA_AE", "BA_TADDA_L1", "BA_TADDA1_L1", "BA_TADDA2_L1",
"BA_SE", "BA_TADDA_L2", "BA_TADDA1_L2", "BA_TADDA2_L2")
# case 1: using the log change distribution of the window directly (uninformed)
for (i in 1:(length(data_fatalities$fatalities)-window_length-1)) {
window_begin <- i+1 # first order log-change is only available from t=2 onwards
window_end <- i+window_length
log_change_distribution <- data_fatalities$log_change_s1[window_begin:window_end]
BA_analytical_uninformed[i,] <- c(data_fatalities$month_id[window_end+1], # use bayes acts of past 23 log changes as prediction for observation t+1
compute_bayes_acts(log_change_distribution, epsilon))
}
# case 2: constructing the log change distribution based on current observation and past fatalities (informed)
for (i in 1:(length(data_fatalities$fatalities)-window_length-1)) {
window_begin <- i
window_end <- i+window_length
fatalities_window <- data_fatalities$fatalities[window_begin:(window_end-1)]
log_change_distribution <- log(fatalities_window+1) - log(data_fatalities$fatalities[window_end]+1) # use last observed value as reference point for log change distribution
BA_analytical_informed[i,] <- c(data_fatalities$month_id[window_end+1], # prediction for t+1
compute_bayes_acts(log_change_distribution, epsilon))
}
# compute mean losses
y_true <- unlist(data_fatalities %>% filter(month_id %in% BA_analytical_informed$month_id) %>% select(log_change_s1))
loss_tables_uninformed <- loss_tables(BA_analytical_uninformed[,-1], y_true, epsilon)
loss_tables_informed <- loss_tables(BA_analytical_informed[,-1], y_true, epsilon)
mean_loss_table_uninformed[[country]] <- mean_loss_table(BA_analytical_uninformed[,-1], y_true, epsilon); mean_loss_table_uninformed
mean_loss_table_informed[[country]] <- mean_loss_table(BA_analytical_informed[,-1], y_true, epsilon); mean_loss_table_informed
